const productDetails = {
  adel: {
    name: "–ê–¥–µ–ª—å",
    price: "3800 –≥—Ä–Ω",
    materials: "–§–∞—Ç–∏–Ω, —à–æ–≤–∫, –º–µ—Ä–µ–∂–∏–≤–æ",
    description: "–°—É–∫–Ω—è –∑ –±–ª–∏—Å–∫—ñ—Ç–∫–∞–º–∏, –ø–∏—à–Ω–∏–º–∏ —Ä—É–∫–∞–≤–∞–º–∏ —Ç–∞ –Ω—ñ–∂–Ω–æ—é –ø—ñ–¥–∫–ª–∞–¥–∫–æ—é. –Ü–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è —Å–≤—è—Ç–∫–æ–≤–∏—Ö –ø–æ–¥—ñ–π.",
    image: "dress-adel.jpg"
  },
  kamila: {
    name: "–ö–∞–º—ñ–ª–∞",
    price: "2500 –≥—Ä–Ω",
    materials: "–ë–∞–≤–æ–≤–Ω–∞, –µ–ª–∞—Å—Ç–∞–Ω",
    description: "–ö–ª–∞—Å–∏—á–Ω–∞ —á–æ—Ä–Ω–∞ —Å—É–∫–Ω—è –∑ –µ–ª–µ–≥–∞–Ω—Ç–Ω–∏–º —Å–∏–ª—É–µ—Ç–æ–º. –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –≤–µ—á—ñ—Ä–Ω—ñ—Ö –∑–∞—Ö–æ–¥—ñ–≤.",
    image: "dress-kamila.jpg"
  },
  emili: {
    name: "–ï–º—ñ–ª—ñ",
    price: "3100 –≥—Ä–Ω",
    materials: "–®–∏—Ñ–æ–Ω, –æ—Ä–≥–∞–Ω–∑–∞",
    description: "–ù—ñ–∂–Ω–∞ –ø–∞—Å—Ç–µ–ª—å–Ω–∞ —Å—É–∫–Ω—è –∑ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏–º–∏ —Ä—É–∫–∞–≤–∞–º–∏. –Ü–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—ñ–π —Ç–∞ —Å–≤—è—Ç.",
    image: "dress-emili.jpg"
  },
  keri: {
    name: "–ö–µ—Ä—ñ",
    price: "2700 –≥—Ä–Ω",
    materials: "–õ—å–æ–Ω, –±–∞–≤–æ–≤–Ω–∞",
    description: "–õ–µ–≥–∫–∞ –ª—ñ—Ç–Ω—è —Å—É–∫–Ω—è –∑ –∫–≤—ñ—Ç–∫–æ–≤–∏–º –ø—Ä–∏–Ω—Ç–æ–º. –ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞ –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ—Å—ñ–Ω–Ω—è.",
    image: "dress-keri.jpg"
  },
  suzi: {
    name: "–°—É–∑—ñ",
    price: "2900 –≥—Ä–Ω",
    materials: "–ê—Ç–ª–∞—Å, —Ñ–∞—Ç–∏–Ω",
    description: "–°—É–∫–Ω—è –∑ –±–∞–Ω—Ç–æ–º –Ω–∞ —Å–ø–∏–Ω—ñ —Ç–∞ –ø–∏—à–Ω–æ—é —Å–ø—ñ–¥–Ω–∏—Ü–µ—é. –Ü–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è —É—Ä–æ—á–∏—Å—Ç–∏—Ö –ø–æ–¥—ñ–π.",
    image: "dress-suzi.jpg"
  },
  eliza: {
    name: "–ï–ª—ñ–∑–∞",
    price: "3500 –≥—Ä–Ω",
    materials: "–û–∫—Å–∞–º–∏—Ç, –º–µ—Ä–µ–∂–∏–≤–æ",
    description: "–†–æ–∑–∫—ñ—à–Ω–∞ —Å—É–∫–Ω—è –∑ –≤–∏—à–∏–≤–∫–æ—é —Ç–∞ –≥–ª–∏–±–æ–∫–∏–º –∫–æ–ª—å–æ—Ä–æ–º. –î–ª—è –æ—Å–æ–±–ª–∏–≤–∏—Ö –º–æ–º–µ–Ω—Ç—ñ–≤.",
    image: "dress-eliza.jpg"
  }
};

// –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ"
document.querySelectorAll('.details-button').forEach(button => {
  button.addEventListener('click', event => {
    const card = event.target.closest('.product-card');
    const id = card.dataset.id;
    const details = productDetails[id];
    if (details) {
      showDetails(details);
    }
  });
});

// –°–ø—ñ–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É —Ç–æ–≤–∞—Ä—É (–¥–µ—Ç–∞–ª—ñ, –æ–±—Ä–∞–Ω–µ, –∫–æ—à–∏–∫)
function showDetails({ name, price, materials, description, image }) {
  const html = `
    <div class="details-overlay">
      <div class="details-content">
        <h2 style="font-size: 20px; margin-bottom: 10px;">${name}</h2>
        <img src="${image}" alt="${name}" style="width:100%; max-width:250px; border-radius:20px; margin-bottom: 15px;">
        <p style="font-size: 14px; line-height: 1.4; margin-bottom: 10px;"><strong>–¶—ñ–Ω–∞:</strong> ${price}</p>
        <p style="font-size: 14px; line-height: 1.4; margin-bottom: 10px;"><strong>–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏:</strong> ${materials}</p>
        <p style="font-size: 14px; line-height: 1.4; margin-bottom: 20px;"><strong>–û–ø–∏—Å:</strong> ${description}</p>
        <button class="close-button">–ó–∞–∫—Ä–∏—Ç–∏</button>
      </div>
    </div>
  `;
  document.body.insertAdjacentHTML('beforeend', html);
  document.querySelector('.close-button').addEventListener('click', () => {
    document.querySelector('.details-overlay').remove();
  });
}

// –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ –∑ localStorage (–¥–ª—è favorites.js —ñ cart.js)
function showList(type) {
  const list = JSON.parse(localStorage.getItem(type)) || [];
  if (list.length === 0) {
    alert("–°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π üòî");
    return;
  }

  const html = `
    <div class="details-overlay">
      <div class="details-content">
        <h2>${type === 'favorites' ? '–û–±—Ä–∞–Ω–µ' : '–ö–æ—à–∏–∫'}</h2>
        ${list.map(id => {
          const details = productDetails[id];
          if (!details) return '';
          return `
            <div style="margin-bottom:20px;">
              <img src="${details.image}" alt="${details.name}" style="width:100px; border-radius:10px;"><br>
              <strong>${details.name}</strong><br>
              <span>${details.price}</span>
            </div>
          `;
        }).join('')}
        <button class="close-button">–ó–∞–∫—Ä–∏—Ç–∏</button>
      </div>
    </div>
  `;
  document.body.insertAdjacentHTML('beforeend', html);
  document.querySelector('.close-button').addEventListener('click', () => {
    document.querySelector('.details-overlay').remove();
  });
}
document.addEventListener("DOMContentLoaded", () => {
  const overlay = document.getElementById("product-details-overlay");
  const closeBtn = document.getElementById("close-details");

  // –í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–æ –∫–Ω–æ–ø—Ü—ñ "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ"
  document.querySelectorAll(".details-button").forEach(btn => {
    btn.addEventListener("click", () => {
      overlay.classList.add("active");
      document.body.style.overflow = "hidden"; // –±–ª–æ–∫—É—î–º–æ —Å–∫—Ä–æ–ª
    });
  });

  // –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ –∫–Ω–æ–ø—Ü—ñ
  closeBtn.addEventListener("click", () => {
    overlay.classList.remove("active");
    document.body.style.overflow = "";
  });

  // –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω
  overlay.addEventListener("click", (e) => {
    if (e.target === overlay) {
      overlay.classList.remove("active");
      document.body.style.overflow = "";
    }
  });

  // –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ Escape
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      overlay.classList.remove("active");
      document.body.style.overflow = "";
    }
  });
});
// --- –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—ñ–≤ (–∑–∞–ª–∏—à—Ç–µ –≤–∞—à—ñ) ---
const productDetails = {
  adel: { name: "–ê–¥–µ–ª—å", price: "3800 –≥—Ä–Ω", materials: "–§–∞—Ç–∏–Ω, —à–æ–≤–∫, –º–µ—Ä–µ–∂–∏–≤–æ", description: "–°—É–∫–Ω—è –∑ –±–ª–∏—Å–∫—ñ—Ç–∫–∞–º–∏...", image: "dress-adel.jpg" },
  // ... —ñ–Ω—à—ñ
};

// --- –¥–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∫—Ä–æ–ª—É ---
function restoreBodyScrollIfNoOverlay() {
  if (!document.querySelector('.details-overlay')) {
    document.body.style.overflow = '';
  }
}

// --- –ø–æ–∫–∞–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ (—Å—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç, –¥–æ–¥–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏) ---
function showDetails({ name, price, materials, description, image }) {
  // —Å—Ç–≤–æ—Ä—é—î–º–æ wrapper
  const wrapper = document.createElement('div');
  wrapper.className = 'details-overlay';
  wrapper.innerHTML = `
    <div class="details-content" role="dialog" aria-modal="true" style="max-width:420px; margin:40px auto; padding:20px; border-radius:12px; background:#fff;">
      <h2 style="font-size:20px; margin-bottom:10px;">${name}</h2>
      <img src="${image}" alt="${name}" style="width:100%; max-width:250px; border-radius:20px; margin-bottom:15px;">
      <p style="font-size:14px; line-height:1.4; margin-bottom:10px;"><strong>–¶—ñ–Ω–∞:</strong> ${price}</p>
      <p style="font-size:14px; line-height:1.4; margin-bottom:10px;"><strong>–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏:</strong> ${materials}</p>
      <p style="font-size:14px; line-height:1.4; margin-bottom:20px;"><strong>–û–ø–∏—Å:</strong> ${description}</p>
      <button class="close-button" aria-label="Close" style="padding:8px 12px; border-radius:8px;">–ó–∞–∫—Ä–∏—Ç–∏</button>
    </div>
  `;

  // –¥–æ–¥–∞—Ç–∏ –≤ DOM
  document.body.appendChild(wrapper);
  // –±–ª–æ–∫—É–≤–∞—Ç–∏ —Å–∫—Ä–æ–ª —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  document.body.style.overflow = 'hidden';

  // –∑–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–Ω–æ–ø—Ü—ñ
  const closeBtn = wrapper.querySelector('.close-button');
  closeBtn.addEventListener('click', () => {
    wrapper.remove();
    restoreBodyScrollIfNoOverlay();
    document.removeEventListener('keydown', onKeydown);
  });

  // –∑–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω (—è–∫—â–æ –∫–ª—ñ–∫–Ω—É–ª–∏ —Å–∞–º–µ –Ω–∞ wrapper)
  wrapper.addEventListener('click', (e) => {
    if (e.target === wrapper) {
      wrapper.remove();
      restoreBodyScrollIfNoOverlay();
      document.removeEventListener('keydown', onKeydown);
    }
  });

  // –∑–∞–∫—Ä–∏—Ç—Ç—è –ø–æ Escape (–ª–æ–∫–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫, –≤–∏–¥–∞–ª—è—î–º–æ –π–æ–≥–æ –ø—ñ—Å–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è)
  function onKeydown(e) {
    if (e.key === 'Escape') {
      if (wrapper.parentNode) wrapper.remove();
      restoreBodyScrollIfNoOverlay();
      document.removeEventListener('keydown', onKeydown);
    }
  }
  document.addEventListener('keydown', onKeydown);
}

// --- –ø–æ–∫–∞–∑ —Å–ø–∏—Å–∫—É (favorites / cart) ‚Äî —Å—Ö–æ–∂–∞ –ª–æ–≥—ñ–∫–∞, —â–æ–± –Ω–µ –±—É–ª–æ –¥—É–±–ª—é–≤–∞–Ω–Ω—è ---
function showList(type) {
  const list = JSON.parse(localStorage.getItem(type)) || [];
  if (list.length === 0) {
    alert("–°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π üòî");
    return;
  }

  const wrapper = document.createElement('div');
  wrapper.className = 'details-overlay';
  wrapper.innerHTML = `
    <div class="details-content" role="dialog" aria-modal="true" style="max-width:520px; margin:40px auto; padding:20px; border-radius:12px; background:#fff;">
      <h2 style="margin-bottom:10px;">${type === 'favorites' ? '–û–±—Ä–∞–Ω–µ' : '–ö–æ—à–∏–∫'}</h2>
      <div class="items-list">
        ${list.map(id => {
          const d = productDetails[id];
          if (!d) return '';
          return `
            <div style="display:flex; gap:12px; align-items:center; margin-bottom:12px;">
              <img src="${d.image}" alt="${d.name}" style="width:80px; height:auto; border-radius:10px;">
              <div>
                <strong>${d.name}</strong><br>
                <span>${d.price}</span>
              </div>
            </div>
          `;
        }).join('')}
      </div>
      <button class="close-button" style="padding:8px 12px; border-radius:8px;">–ó–∞–∫—Ä–∏—Ç–∏</button>
    </div>
  `;

  document.body.appendChild(wrapper);
  document.body.style.overflow = 'hidden';

  const closeBtn = wrapper.querySelector('.close-button');
  closeBtn.addEventListener('click', () => {
    wrapper.remove();
    restoreBodyScrollIfNoOverlay();
    document.removeEventListener('keydown', onKeydown);
  });
  wrapper.addEventListener('click', (e) => {
    if (e.target === wrapper) {
      wrapper.remove();
      restoreBodyScrollIfNoOverlay();
      document.removeEventListener('keydown', onKeydown);
    }
  });
  function onKeydown(e) {
    if (e.key === 'Escape') {
      if (wrapper.parentNode) wrapper.remove();
      restoreBodyScrollIfNoOverlay();
      document.removeEventListener('keydown', onKeydown);
    }
  }
  document.addEventListener('keydown', onKeydown);
}

// --- –¥–µ–ª–µ–≥–æ–≤–∞–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ", "–ü–æ–∫–∞–∑–∞—Ç–∏ –æ–±—Ä–∞–Ω–µ/–∫–æ—à–∏–∫" ---
// –¶–µ –≥–∞—Ä–∞–Ω—Ç—É—î, —â–æ –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Ç–µ–∂ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º—É—Ç—å —ñ —Ç—É—Ç –Ω–µ–º–∞ –¥—É–±–ª—é–≤–∞–Ω–Ω—è —Å–ª—É—Ö–∞—á—ñ–≤.
document.addEventListener('click', (e) => {
  const btn = e.target.closest('.details-button');
  if (btn) {
    const card = btn.closest('.product-card');
    const id = card && card.dataset.id;
    const details = productDetails[id];
    if (details) showDetails(details);
    return;
  }

  // –ø—Ä–∏–∫–ª–∞–¥: –∫–Ω–æ–ø–∫–∏ –¥–ª—è favorites/cart, —è–∫—â–æ —É –≤–∞—Å —î –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –∫–ª–∞—Å–∞–º–∏ .open-favorites / .open-cart
  if (e.target.closest('.open-favorites')) {
    showList('favorites');
    return;
  }
  if (e.target.closest('.open-cart')) {
    showList('cart');
    return;
  }
});

// --- —è–∫—â–æ —É –≤–∞—Å —É –∫–æ–¥—ñ —â–µ –ª–∏—à–∏–≤—Å—è —Å—Ç–∞—Ä–∏–π –±–ª–æ–∫, —è–∫–∏–π –ø—Ä–∞—Ü—é—î –∑ id="product-details-overlay" —Ç–∞ id="close-details",
// –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫:
document.addEventListener('DOMContentLoaded', () => {
  const overlay = document.getElementById("product-details-overlay");
  const closeBtn = document.getElementById("close-details");
  if (overlay && closeBtn) {
    closeBtn.addEventListener("click", () => {
      overlay.classList.remove("active");
      document.body.style.overflow = "";
    });
    overlay.addEventListener("click", (e) => {
      if (e.target === overlay) {
        overlay.classList.remove("active");
        document.body.style.overflow = "";
      }
    });
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape" && overlay.classList.contains("active")) {
        overlay.classList.remove("active");
        document.body.style.overflow = "";
      }
    });
  }
});
